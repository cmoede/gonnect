default:
  image: registry.intranet.gonicus.de/gossip/images/fedora:f40
  interruptible: true

variables:
  # Application id of the app, should be same as id used in flatpak manifest and appdata
  APP_ID: de.gonicus.gonnect
  # Location of the flatpak manifest, root of git repository
  MANIFEST_PATH: $CI_PROJECT_DIR/resources/flatpak/${APP_ID}.yml
  # Name of flatpak bundle
  BUNDLE: "${APP_ID}.flatpak"
  # Docker image to use
  DOCKER_REGISTRY: "docker.io/bilelmoussaoui/flatpak-github-actions"
  # Runtime to use, https://github.com/flatpak/flatpak-github-actions#docker-image
  RUNTIME_NAME: "freedesktop"
  # Runtime version to use
  RUNTIME_VRESION: "23.08"
  DOCKER_IMAGE: ${DOCKER_REGISTRY}:${RUNTIME_NAME}-${RUNTIME_VRESION}
  SCHEDULE_TASK: default
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_DEPTH: 1

stages:
  - build
  - test
  - deploy


Linux Build:
  stage: build

  script:
    - mkdir build && cd build
    - cmake -GNinja -DBUILD_TESTING=ON ..
    - cmake --build . --config Release --parallel $(nproc --all)

  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      when: on_success
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
      when: on_success
    - when: never

  artifacts:
    paths:
      - build/tests/contactsTest
    expire_in: 120 min
    when: always


Unit Tests:
  stage: test
  interruptible: true

  dependencies:
    - Linux Build

  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      when: on_success
    - when: never

  script:
    - build/tests/contactsTest


Clang Analyzer:
  stage: test

  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      when: on_success
    - when: never

  script:
    - scripts/static-clang-analyzer.sh


Clazy Analyzer:
  stage: test

  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH'
      when: on_success
    - when: never

  script:
    - scripts/static-clazy-analyzer.sh


Flatpak:
  stage: deploy
  image: ${DOCKER_IMAGE}

  dependencies:
    - Linux Build

  variables:
    # Stable Flathub repo
    RUNTIME_REPO: "https://flathub.org/repo/flathub.flatpakrepo"

  before_script:
    # Sets up the stable Flathub repository for dependencies
    - flatpak remote-add --user --if-not-exists flathub ${RUNTIME_REPO}
    - curl --insecure -L -o /etc/pki/ca-trust/source/anchors/intra.gonicus.de.crt https://ipa-ca.intra.gonicus.de/ipa/config/ca.crt
    - update-ca-trust extract

  script:
    # Build & install build dependencies
    - flatpak-builder build --user --install-deps-from=flathub --disable-rofiles-fuse --force-clean --repo=repo ${BRANCH:+--default-branch=$BRANCH} ${MANIFEST_PATH}
    # Generate a Flatpak bundle
    - flatpak build-bundle repo ${BUNDLE} --runtime-repo=${RUNTIME_REPO} ${APP_ID} ${BRANCH}
    - flatpak build-update-repo --generate-static-deltas --prune repo/
    - ./scripts/deploy.sh

  tags:
    - priv

  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+/'
      when: on_success
    - when: never

