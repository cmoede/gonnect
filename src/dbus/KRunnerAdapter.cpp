/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a KRunnerAdapter -c KRunner2Adapter -i QObject
 * specs/org.kde.krunner1.xml
 *
 * qdbusxml2cpp is Copyright (C) The Qt Company Ltd. and other contributors.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "KRunnerAdapter.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class KRunner2Adapter
 */

KRunner2Adapter::KRunner2Adapter(QObject *parent) : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

KRunner2Adapter::~KRunner2Adapter()
{
    // destructor
}

ActionList KRunner2Adapter::Actions()
{
    // handle method call org.kde.krunner1.Actions
    ActionList matches;
    QMetaObject::invokeMethod(parent(), "Actions", Q_RETURN_ARG(ActionList, matches));
    return matches;
}

QVariantMap KRunner2Adapter::Config()
{
    // handle method call org.kde.krunner1.Config
    QVariantMap config;
    QMetaObject::invokeMethod(parent(), "Config", Q_RETURN_ARG(QVariantMap, config));
    return config;
}

RemoteMatches KRunner2Adapter::Match(const QString &query)
{
    // handle method call org.kde.krunner1.Match
    RemoteMatches matches;
    QMetaObject::invokeMethod(parent(), "Match", Q_RETURN_ARG(RemoteMatches, matches),
                              Q_ARG(QString, query));
    return matches;
}

void KRunner2Adapter::Run(const QString &matchId, const QString &actionId)
{
    // handle method call org.kde.krunner1.Run
    QMetaObject::invokeMethod(parent(), "Run", Q_ARG(QString, matchId), Q_ARG(QString, actionId));
}

void KRunner2Adapter::Teardown()
{
    // handle method call org.kde.krunner1.Teardown
    QMetaObject::invokeMethod(parent(), "Teardown");
}

#include "moc_KRunnerAdapter.cpp"
